buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        // Make sure this version matches the one included in Kotlin for Forge
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0'
        // OPTIONAL Gradle plugin for Kotlin Serialization
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.8.0'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

group = 'military'
archivesBaseName = 'military'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    // Change to your preferred mappings
    mappings channel: 'official', version: '1.18.2'
    // Add your AccessTransformer
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                military {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                military {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args '--mod', 'military', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                military {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include assets and data from data generators
sourceSets.main.resources { srcDirs 'src/generated/resources/' }

repositories {
    // KFF
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }

    mavenCentral()

    // jitpack for univec
    maven { url 'https://jitpack.io' }

    // libs folder for ntm
    flatDir {
        dirs 'libs'
    }

    // Valkyrien Skies repository
    maven { url = 'https://maven.valkyrienskies.org' }
}

dependencies {
    // Use the latest version of Minecraft Forge
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'

    // someone told me to do this...
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    // Valkyrien Skies 2
    implementation(fg.deobf("org.valkyrienskies:valkyrienskies-118-forge:${vs2_version}")) { /*transitive = false;*/ exclude group: 'org.jetbrains', module: 'annotations'}
    implementation("org.valkyrienskies.core:api:1.1.0+c92814e9b7") { /*transitive = false;*/ exclude group: 'org.jetbrains', module: 'annotations' }

    // UniVec
    implementation 'com.github.SuperCraftAlex:LIBRARY-UnifiedVectors:cac439d176'

    // fasterxml.jackson   dont know why it isnt already in
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'

    // joml stuff          same
    implementation 'org.joml:joml:1.10.5'
    implementation 'org.joml:joml-primitives:1.10.0'

    // jsonschema
    implementation 'com.github.imifou:jsonschema-module-addon:1.2.1'

    implementation fg.deobf("at.martinthedragon:nucleartech:1.18.2-0.0.19.2:snapshot20230222T180857")
    implementation fg.deobf("at.martinthedragon:nucleartech:1.18.2-0.0.19.2:snapshot20230222T180857-api")
    sourceArtifacts("at.martinthedragon:nucleartech:1.18.2-0.0.19.2:snapshot20230222T180857-sources")
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

jar {
    manifest {
        attributes([
                'Specification-Title': "military",
                'Specification-Vendor': "militarysareus",
                'Specification-Version': "1", // We are version 1 of ourselves
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor' :"militarysareus",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// CHANGE THESE EACH KFF UPDATE
ext.kotlin_version = '1.8.0'
ext.coroutines_version = '1.6.0'
ext.serialization_version = '1.3.2'

project.properties['kotlin.stdlib.default.dependency'] = false

configurations {
    library
}

// Used to manually add non-mc libraries to the runtime classpaths found in build/classpath
// If you have any module issues, check these files to make sure there are no duplicate dependencies
minecraft.runs.all {
    lazyToken('minecraft_classpath') {
        configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}

repositories {
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
}

dependencies {
    // Kotlin for Forge
    implementation 'thedarkcolour:kotlinforforge:3.10.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = '17'
}
